{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Jira功能拓展优化整合版","options":{"check_for_updates":true,"user_modified":1729475495389,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"run_in":null,"tags":[],"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://jira-ex.transsion.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[],"orig_tags":[]}},"storage":{"ts":1724306789693,"data":{}},"enabled":true,"position":1,"file_url":"https://raw.githubusercontent.com/Lemou-Memo/jira/main/Jira%20Functionality%20Enhancement%20and%20Integration.js","uuid":"45ae6473-1ec7-49df-b5d9-56a6219eefdb","source":""},{"name":"获取所有图片和视频显示右下角翻页","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"run_in":null,"tags":[],"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://jira-ex.transsion.com/browse/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[],"orig_tags":[]}},"storage":{"ts":1725242041627,"data":{}},"enabled":true,"position":2,"file_url":"https://github.com/Lemou-Memo/jira/raw/main/photo.js","uuid":"873b37c8-0b3a-45f5-a681-3f7343379391","source":""}]}