{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Jira功能拓展优化整合版","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":true,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["http://jira-ex.transsion.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_run_in":[]},"run_in":null,"tags":[]},"storage":{"ts":1726799516795,"data":{}},"enabled":true,"position":1,"file_url":"https://raw.githubusercontent.com/Lemou-Memo/jira/main/Jira%20Functionality%20Enhancement%20and%20Integration.js","uuid":"45ae6473-1ec7-49df-b5d9-56a6219eefdb","source":""},{"name":"获取所有图片和视频显示右下角翻页","options":{"check_for_updates":true,"user_modified":1726733593623,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["http://jira-ex.transsion.com/browse/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_run_in":[]},"run_in":null,"tags":[]},"storage":{"ts":1726799516795,"data":{}},"enabled":true,"position":2,"file_url":"https://github.com/Lemou-Memo/jira/raw/main/photo.js","uuid":"873b37c8-0b3a-45f5-a681-3f7343379391","source":""}]}